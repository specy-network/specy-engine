// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Register.proto

#include "Register.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace request_proto {
class EngineInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EngineInfoRequest> _instance;
} _EngineInfoRequest_default_instance_;
class EngineInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EngineInfoResponse> _instance;
} _EngineInfoResponse_default_instance_;
}  // namespace request_proto
static void InitDefaultsEngineInfoRequest_Register_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::request_proto::_EngineInfoRequest_default_instance_;
    new (ptr) ::request_proto::EngineInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::request_proto::EngineInfoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EngineInfoRequest_Register_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEngineInfoRequest_Register_2eproto}, {}};

static void InitDefaultsEngineInfoResponse_Register_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::request_proto::_EngineInfoResponse_default_instance_;
    new (ptr) ::request_proto::EngineInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::request_proto::EngineInfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EngineInfoResponse_Register_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEngineInfoResponse_Register_2eproto}, {}};

void InitDefaults_Register_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_EngineInfoRequest_Register_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EngineInfoResponse_Register_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_Register_2eproto[2];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_Register_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_Register_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_Register_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::request_proto::EngineInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::request_proto::EngineInfoRequest, chaintype_),
  PROTOBUF_FIELD_OFFSET(::request_proto::EngineInfoRequest, chainid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::request_proto::EngineInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::request_proto::EngineInfoResponse, ias_attestation_report_),
  PROTOBUF_FIELD_OFFSET(::request_proto::EngineInfoResponse, enclave_pk_),
  PROTOBUF_FIELD_OFFSET(::request_proto::EngineInfoResponse, error_info_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::request_proto::EngineInfoRequest)},
  { 7, -1, sizeof(::request_proto::EngineInfoResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::request_proto::_EngineInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::request_proto::_EngineInfoResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_Register_2eproto = {
  {}, AddDescriptors_Register_2eproto, "Register.proto", schemas,
  file_default_instances, TableStruct_Register_2eproto::offsets,
  file_level_metadata_Register_2eproto, 2, file_level_enum_descriptors_Register_2eproto, file_level_service_descriptors_Register_2eproto,
};

const char descriptor_table_protodef_Register_2eproto[] =
  "\n\016Register.proto\022\rrequest_proto\"7\n\021Engin"
  "eInfoRequest\022\021\n\tChainType\030\001 \001(\t\022\017\n\007Chain"
  "Id\030\002 \001(\t\"\\\n\022EngineInfoResponse\022\036\n\026ias_at"
  "testation_report\030\001 \001(\t\022\022\n\nenclave_pk\030\002 \001"
  "(\t\022\022\n\nerror_info\030\003 \001(\t2`\n\010Register\022T\n\rGe"
  "tEngineInfo\022 .request_proto.EngineInfoRe"
  "quest\032!.request_proto.EngineInfoResponse"
  "b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_Register_2eproto = {
  false, InitDefaults_Register_2eproto, 
  descriptor_table_protodef_Register_2eproto,
  "Register.proto", &assign_descriptors_table_Register_2eproto, 288,
};

void AddDescriptors_Register_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_Register_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Register_2eproto = []() { AddDescriptors_Register_2eproto(); return true; }();
namespace request_proto {

// ===================================================================

void EngineInfoRequest::InitAsDefaultInstance() {
}
class EngineInfoRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EngineInfoRequest::kChainTypeFieldNumber;
const int EngineInfoRequest::kChainIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EngineInfoRequest::EngineInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_proto.EngineInfoRequest)
}
EngineInfoRequest::EngineInfoRequest(const EngineInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chaintype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.chaintype().size() > 0) {
    chaintype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chaintype_);
  }
  chainid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.chainid().size() > 0) {
    chainid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chainid_);
  }
  // @@protoc_insertion_point(copy_constructor:request_proto.EngineInfoRequest)
}

void EngineInfoRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_EngineInfoRequest_Register_2eproto.base);
  chaintype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chainid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EngineInfoRequest::~EngineInfoRequest() {
  // @@protoc_insertion_point(destructor:request_proto.EngineInfoRequest)
  SharedDtor();
}

void EngineInfoRequest::SharedDtor() {
  chaintype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chainid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EngineInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EngineInfoRequest& EngineInfoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EngineInfoRequest_Register_2eproto.base);
  return *internal_default_instance();
}


void EngineInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:request_proto.EngineInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chainid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EngineInfoRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EngineInfoRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string ChainType = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("request_proto.EngineInfoRequest.ChainType");
        object = msg->mutable_chaintype();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string ChainId = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("request_proto.EngineInfoRequest.ChainId");
        object = msg->mutable_chainid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EngineInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:request_proto.EngineInfoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ChainType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chaintype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chaintype().data(), static_cast<int>(this->chaintype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "request_proto.EngineInfoRequest.ChainType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ChainId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chainid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chainid().data(), static_cast<int>(this->chainid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "request_proto.EngineInfoRequest.ChainId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:request_proto.EngineInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:request_proto.EngineInfoRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EngineInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:request_proto.EngineInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ChainType = 1;
  if (this->chaintype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chaintype().data(), static_cast<int>(this->chaintype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.EngineInfoRequest.ChainType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->chaintype(), output);
  }

  // string ChainId = 2;
  if (this->chainid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chainid().data(), static_cast<int>(this->chainid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.EngineInfoRequest.ChainId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->chainid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:request_proto.EngineInfoRequest)
}

::google::protobuf::uint8* EngineInfoRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:request_proto.EngineInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ChainType = 1;
  if (this->chaintype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chaintype().data(), static_cast<int>(this->chaintype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.EngineInfoRequest.ChainType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->chaintype(), target);
  }

  // string ChainId = 2;
  if (this->chainid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chainid().data(), static_cast<int>(this->chainid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.EngineInfoRequest.ChainId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->chainid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_proto.EngineInfoRequest)
  return target;
}

size_t EngineInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_proto.EngineInfoRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ChainType = 1;
  if (this->chaintype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chaintype());
  }

  // string ChainId = 2;
  if (this->chainid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chainid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EngineInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_proto.EngineInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EngineInfoRequest* source =
      ::google::protobuf::DynamicCastToGenerated<EngineInfoRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_proto.EngineInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_proto.EngineInfoRequest)
    MergeFrom(*source);
  }
}

void EngineInfoRequest::MergeFrom(const EngineInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_proto.EngineInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chaintype().size() > 0) {

    chaintype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chaintype_);
  }
  if (from.chainid().size() > 0) {

    chainid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chainid_);
  }
}

void EngineInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_proto.EngineInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EngineInfoRequest::CopyFrom(const EngineInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_proto.EngineInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EngineInfoRequest::IsInitialized() const {
  return true;
}

void EngineInfoRequest::Swap(EngineInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EngineInfoRequest::InternalSwap(EngineInfoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  chaintype_.Swap(&other->chaintype_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  chainid_.Swap(&other->chainid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata EngineInfoRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Register_2eproto);
  return ::file_level_metadata_Register_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EngineInfoResponse::InitAsDefaultInstance() {
}
class EngineInfoResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EngineInfoResponse::kIasAttestationReportFieldNumber;
const int EngineInfoResponse::kEnclavePkFieldNumber;
const int EngineInfoResponse::kErrorInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EngineInfoResponse::EngineInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_proto.EngineInfoResponse)
}
EngineInfoResponse::EngineInfoResponse(const EngineInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ias_attestation_report_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ias_attestation_report().size() > 0) {
    ias_attestation_report_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ias_attestation_report_);
  }
  enclave_pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.enclave_pk().size() > 0) {
    enclave_pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.enclave_pk_);
  }
  error_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_info().size() > 0) {
    error_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_info_);
  }
  // @@protoc_insertion_point(copy_constructor:request_proto.EngineInfoResponse)
}

void EngineInfoResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_EngineInfoResponse_Register_2eproto.base);
  ias_attestation_report_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enclave_pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EngineInfoResponse::~EngineInfoResponse() {
  // @@protoc_insertion_point(destructor:request_proto.EngineInfoResponse)
  SharedDtor();
}

void EngineInfoResponse::SharedDtor() {
  ias_attestation_report_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enclave_pk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EngineInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EngineInfoResponse& EngineInfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EngineInfoResponse_Register_2eproto.base);
  return *internal_default_instance();
}


void EngineInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:request_proto.EngineInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ias_attestation_report_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enclave_pk_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EngineInfoResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EngineInfoResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string ias_attestation_report = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("request_proto.EngineInfoResponse.ias_attestation_report");
        object = msg->mutable_ias_attestation_report();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string enclave_pk = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("request_proto.EngineInfoResponse.enclave_pk");
        object = msg->mutable_enclave_pk();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string error_info = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("request_proto.EngineInfoResponse.error_info");
        object = msg->mutable_error_info();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EngineInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:request_proto.EngineInfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ias_attestation_report = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ias_attestation_report()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ias_attestation_report().data(), static_cast<int>(this->ias_attestation_report().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "request_proto.EngineInfoResponse.ias_attestation_report"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string enclave_pk = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_enclave_pk()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->enclave_pk().data(), static_cast<int>(this->enclave_pk().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "request_proto.EngineInfoResponse.enclave_pk"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_info().data(), static_cast<int>(this->error_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "request_proto.EngineInfoResponse.error_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:request_proto.EngineInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:request_proto.EngineInfoResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EngineInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:request_proto.EngineInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ias_attestation_report = 1;
  if (this->ias_attestation_report().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ias_attestation_report().data(), static_cast<int>(this->ias_attestation_report().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.EngineInfoResponse.ias_attestation_report");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ias_attestation_report(), output);
  }

  // string enclave_pk = 2;
  if (this->enclave_pk().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->enclave_pk().data(), static_cast<int>(this->enclave_pk().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.EngineInfoResponse.enclave_pk");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->enclave_pk(), output);
  }

  // string error_info = 3;
  if (this->error_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_info().data(), static_cast<int>(this->error_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.EngineInfoResponse.error_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:request_proto.EngineInfoResponse)
}

::google::protobuf::uint8* EngineInfoResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:request_proto.EngineInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ias_attestation_report = 1;
  if (this->ias_attestation_report().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ias_attestation_report().data(), static_cast<int>(this->ias_attestation_report().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.EngineInfoResponse.ias_attestation_report");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ias_attestation_report(), target);
  }

  // string enclave_pk = 2;
  if (this->enclave_pk().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->enclave_pk().data(), static_cast<int>(this->enclave_pk().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.EngineInfoResponse.enclave_pk");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->enclave_pk(), target);
  }

  // string error_info = 3;
  if (this->error_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_info().data(), static_cast<int>(this->error_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.EngineInfoResponse.error_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error_info(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_proto.EngineInfoResponse)
  return target;
}

size_t EngineInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_proto.EngineInfoResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ias_attestation_report = 1;
  if (this->ias_attestation_report().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ias_attestation_report());
  }

  // string enclave_pk = 2;
  if (this->enclave_pk().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->enclave_pk());
  }

  // string error_info = 3;
  if (this->error_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_info());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EngineInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_proto.EngineInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EngineInfoResponse* source =
      ::google::protobuf::DynamicCastToGenerated<EngineInfoResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_proto.EngineInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_proto.EngineInfoResponse)
    MergeFrom(*source);
  }
}

void EngineInfoResponse::MergeFrom(const EngineInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_proto.EngineInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ias_attestation_report().size() > 0) {

    ias_attestation_report_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ias_attestation_report_);
  }
  if (from.enclave_pk().size() > 0) {

    enclave_pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.enclave_pk_);
  }
  if (from.error_info().size() > 0) {

    error_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_info_);
  }
}

void EngineInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_proto.EngineInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EngineInfoResponse::CopyFrom(const EngineInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_proto.EngineInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EngineInfoResponse::IsInitialized() const {
  return true;
}

void EngineInfoResponse::Swap(EngineInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EngineInfoResponse::InternalSwap(EngineInfoResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  ias_attestation_report_.Swap(&other->ias_attestation_report_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  enclave_pk_.Swap(&other->enclave_pk_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  error_info_.Swap(&other->error_info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata EngineInfoResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Register_2eproto);
  return ::file_level_metadata_Register_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace request_proto
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::request_proto::EngineInfoRequest* Arena::CreateMaybeMessage< ::request_proto::EngineInfoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::request_proto::EngineInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::request_proto::EngineInfoResponse* Arena::CreateMaybeMessage< ::request_proto::EngineInfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::request_proto::EngineInfoResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
